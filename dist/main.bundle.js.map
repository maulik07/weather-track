{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/temperature-conf.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app-config.service.ts","webpack:///./src/app/models/weather-conf.ts","webpack:///./src/app/weather.service.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACVY;AAGR;AACL;AAEC;AASpD,IAAa,YAAY;IAevB,sBAAoB,aAA+B,EAAU,WAA2B;QAApE,kBAAa,GAAb,aAAa,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAgB;QAZxF,sBAAiB,GAAsB,EAAE,CAAC;QAC1C,iBAAY,GAAG,IAAI,mEAAY,EAA8B,CAAC;QAC9D,oBAAe,GAAkB,EAAE,CAAC;IAUwD,CAAC;IAP7F,gCAAS,GAAT;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAChE,CAAC;IACD,iCAAU,GAAV;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACjE,CAAC;IAID,+BAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,iBAAO;YACtD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,iBAAO;gBAC7D,OAAO,CAAC,OAAO,CAAC,gBAAM;oBACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpB,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACtC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,yBAAe;YAC/D,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAkB,GAAlB,UAAmB,IAAI;QACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,2CAAoB,GAApB;QAAA,iBAeC;QAdC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,IAAI,IAAE,GAAG,IAAI,CAAC,cAAc,CAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAE,CAAC,CAAC,SAAS,CAAC,aAAG;gBACrD,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAS,KAAK;oBAC/D,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,IAAE,CAAC;gBACxB,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,IAAI,yEAAW,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,iBAAO;oBAC3E,OAAO,CAAC,OAAO,CAAC,gBAAM;wBACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBACpB,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACtC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAGH,mBAAC;AAAD,CAAC;AAvDY,YAAY;IALxB,wFAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,kCAAmC;QACnC,kCAAkC;KACnC,CAAC;yDAgBmC,6EAAgB,oBAAhB,6EAAgB,sDAAuB,wEAAc,oBAAd,wEAAc;GAf7E,YAAY,CAuDxB;AAvDwB;;;;;;;;;;;;;;;;;;;;;;;;;ACfiC;AACjB;AACI;AACF;AACc;AAEV;AACI;AACK;AAgBxD,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAdrB,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,iEAAU;YACV,+EAAiB;SAClB;QACD,SAAS,EAAE,CAAC,wEAAc;YAC1B,6EAAgB,CAAC;QACjB,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;ACxBtB;AAAA;IAAA;IAOA,CAAC;IAAD,sBAAC;AAAD,CAAC;;;;;;;;;ACPD;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,iXAAiX,iBAAiB,uBAAuB,wBAAwB,gDAAgD,oBAAoB,UAAU,oBAAoB,6hBAA6hB,kBAAkB,0FAA0F,iaAAia,aAAa,yoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/hD;AACN;AAGe;AACM;AAG1D,IAAa,gBAAgB;IAI3B,0BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,eAAU,GAAG,8EAAW,CAAC,UAAU,CAAC;IAEV,CAAC;IAEnC,4CAAiB,GAAjB;QACE,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,sBAAsB,CAAC,CAAC;IAChE,CAAC;IAED,6CAAkB,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,CAAC;IACvD,CAAC;IAEO,oDAAyB,GAAjC,UAAkC,KAAa;QAC7C,IAAI,YAAY,GAAkB,EAAE,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,aAAG;YACnD,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,iBAAO;gBAClB,IAAI,WAAW,GAAG,IAAI,yEAAW,EAAE,CAAC;gBACpC,WAAW,CAAC,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;gBAC7B,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gBAChC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,YAAY;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAoB,GAApB,UAAqB,EAAU;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAC,cAAc,GAAC,EAAE,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACjF,CAAC;IAEH,uBAAC;AAAD,CAAC;AAhCY,gBAAgB;IAD5B,wFAAU,EAAE;yDAKe,2DAAI,oBAAJ,2DAAI;GAJnB,gBAAgB,CAgC5B;AAhC4B;;;;;;;;;;ACR7B;AAAA;IAII,qBAAY,EAAU,EAAE,IAAa;QACjC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACR0C;AACN;AACA;AAEuB;AAI5D,IAAa,cAAc;IAIzB,wBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAF9B,YAAO,GAAG,wGAAwG;IAEhF,CAAC;IAEnC,4CAAmB,GAAnB,UAAoB,cAA6B;QAAjD,iBAiBC;QAhBC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAElB,cAAc,CAAC,OAAO,CAAE,uBAAa;YACnC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAC,aAAa,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,aAAG;gBAChE,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;gBACtB,IAAI,UAAU,GAAG,IAAI,iFAAe,EAAE,CAAC;gBACvC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACxC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACxC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACxC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC5B,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;gBACxB,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;gBAC9C,MAAM,CAAC,UAAU,CAAC;YACpB,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,mDAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEH,qBAAC;AAAD,CAAC;AAzBY,cAAc;IAD1B,wFAAU,EAAE;yDAKe,2DAAI,oBAAJ,2DAAI;GAJnB,cAAc,CAyB1B;AAzB0B;;;;;;;;;;;ACRpB,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,UAAU,EAAE,wCAAwC;CACrD,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 134;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 134\n// module chunks = 2","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { MaterializeAction } from 'angular2-materialize';\n\nimport { AppConfigService } from './app-config.service';\nimport { WeatherService } from './weather.service';\n\nimport { WeatherConf } from './models/weather-conf';\nimport { TemperatureConf } from './models/temperature-conf';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  configs: WeatherConf[];\n  tempratureConfigs: TemperatureConf[] = [];\n  modalActions = new EventEmitter<string | MaterializeAction>();\n  availableCities: WeatherConf[] = [];\n  selectedCityId: number;\n\n  openModal() {\n    this.modalActions.emit({ action: \"modal\", params: ['open'] });\n  }\n  closeModal() {\n    this.modalActions.emit({ action: \"modal\", params: ['close'] });\n  }\n\n  constructor(private _appConfigSvc: AppConfigService, private _weatherSvc: WeatherService) { }\n\n  ngOnInit() {\n    this._appConfigSvc.readConfiguration().subscribe(configs => {\n      this.configs = configs;\n      this._weatherSvc.getTempratureConfig(configs).subscribe(results => {\n        results.forEach(result => {\n          console.log(result);\n          this.tempratureConfigs.push(result);\n        });\n      })\n    });\n\n    this._appConfigSvc.getAvailableCities().subscribe(availableCities => {\n      this.availableCities = availableCities;\n    });\n  }\n\n  onSelectionChanged(data) {\n    this.selectedCityId = data;\n  }\n\n  startTrackingNewCity() {\n    if (this.selectedCityId !== undefined) {\n      let id = this.selectedCityId;\n      this._appConfigSvc.startTrackingNewCity(id).subscribe(res => {\n          this.availableCities = this.availableCities.filter(function(value) {\n            return value.id != id;\n          });\n          this._weatherSvc.getTempratureConfig([new WeatherConf(id)]).subscribe(results => {\n            results.forEach(result => {\n              console.log(result);\n              this.tempratureConfigs.push(result);\n            });\n          });\n      });\n    }\n  }\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterializeModule } from 'angular2-materialize';\n\nimport { AppComponent } from './app.component';\nimport { WeatherService } from './weather.service';\nimport { AppConfigService } from './app-config.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterializeModule\n  ],\n  providers: [WeatherService,\n  AppConfigService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export class TemperatureConf {\r\n    currentTemp: number\r\n    minTemp: number\r\n    maxTemp: number\r\n    name: String\r\n    id: number\r\n    desc: String\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/temperature-conf.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 202\n// module chunks = 2","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12 m6 l4\\\" *ngFor=\\\"let tempConfig of tempratureConfigs\\\">\\n    <div class=\\\"card horizontal\\\">\\n      <div class=\\\"card-image\\\">\\n        <img src=\\\"http://ssl.gstatic.com/onebox/weather/128/sunny.png\\\">\\n      </div>\\n      <div class=\\\"card-stacked\\\">\\n        <div class=\\\"card-content\\\">\\n          <h4>{{tempConfig.name}}</h4>\\n          <h5>{{tempConfig.currentTemp}}</h5>\\n          <h6 class=\\\"grey-text\\\">Max: {{tempConfig.maxTemp}} | Min: {{tempConfig.minTemp}} </h6>\\n        </div>\\n        <div class=\\\"card-action\\\">\\n          <a class=\\\"btn-floating right waves-effect waves-light pink\\\"><i class=\\\"material-icons\\\">delete</i></a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"fixed-action-btn\\\">\\n    <a class=\\\"btn-floating btn-large waves-effect waves-light pink modal-trigger\\\" (click)=\\\"openModal()\\\"><i class=\\\"material-icons\\\">add</i></a>\\n  </div>\\n\\n  <!-- Add Config Modal -->\\n  <div id=\\\"addConfig\\\" class=\\\"modal\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: true}]\\\" [materializeActions]=\\\"modalActions\\\">\\n      <div *ngIf=\\\"availableCities.length > 0;then showSelection else displayMessage\\\"></div>\\n    \\n      <ng-template #showSelection>\\n        <div class=\\\"modal-content\\\">\\n          <h4>Track weather of another city?</h4>\\n          <select  materialize=\\\"material_select\\\" [materializeSelectOptions]=\\\"availableCities\\\" (change)='onSelectionChanged($event.target.value)'>\\n            <option *ngFor=\\\"let option of availableCities\\\" [value]=\\\"option.id\\\">{{option.name}}</option>\\n          </select>\\n        </div>\\n        \\n        <div class=\\\"modal-footer\\\">\\n          <a (click)=\\\"startTrackingNewCity()\\\" class=\\\"modal-action modal-close waves-effect waves-green btn-flat\\\">Track now</a>\\n        </div>\\n      </ng-template>\\n\\n      <ng-template #displayMessage>\\n        <div class=\\\"modal-content\\\">\\n          <p class=\\\"grey-text\\\"> Ahh!! Seems like there are no more cities available to track </p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <a class=\\\"modal-action modal-close waves-effect waves-green btn-flat\\\">Dismiss</a>\\n        </div>\\n      </ng-template>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 206\n// module chunks = 2","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\nimport { WeatherConf } from './models/weather-conf';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class AppConfigService {\n\n  private baseApiUrl = environment.baseApiUrl;\n\n  constructor(private http: Http) { }\n\n  readConfiguration(): Observable<WeatherConf[]> {\n    return this.makeApiCallAndFetchCities('/get-selected-cities');\n  }\n\n  getAvailableCities(): Observable<WeatherConf[]> {\n    return this.makeApiCallAndFetchCities('/get-cities');\n  }\n\n  private makeApiCallAndFetchCities(route: String) : Observable<WeatherConf[]> {\n    let weatherConfs: WeatherConf[] = [];\n    return this.http.get(this.baseApiUrl + route).map(res => {\n      let data = res.json();\n      data.forEach(element => {\n        let weatherConf = new WeatherConf();\n        weatherConf.id = element._id;\n        weatherConf.name = element.name;\n        weatherConfs.push(weatherConf);\n      });\n      return weatherConfs\n    });\n  }\n\n  startTrackingNewCity(id: number) {\n    return this.http.get(this.baseApiUrl+'/track-city/'+id).map(res => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-config.service.ts","export class WeatherConf {\r\n    id: number\r\n    name: String\r\n\r\n    constructor(id?:number, name?: String) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/weather-conf.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\n\nimport { TemperatureConf } from './models/temperature-conf';\nimport { WeatherConf } from './models/weather-conf';\n\n@Injectable()\nexport class WeatherService {\n\n  baseURL = \"http://api.openweathermap.org/data/2.5/weather?units=metric&appid=6912a0ee99995b8550c1358af83f08d2&id=\"  \n\n  constructor(private http: Http) { }\n\n  getTempratureConfig(weatherConfigs: WeatherConf[] ) : Observable<TemperatureConf[]> {\n    let requests = [];\n\n    weatherConfigs.forEach( weatherConfig => {\n      requests.push(this.http.get(this.baseURL+weatherConfig.id).map(res =>  {\n        let data = res.json();\n        let tempConfig = new TemperatureConf();\n        tempConfig.currentTemp = data.main.temp;\n        tempConfig.minTemp = data.main.temp_min;\n        tempConfig.maxTemp = data.main.temp_max;\n        tempConfig.name = data.name;\n        tempConfig.id = data.id;        \n        tempConfig.desc = data.weather[0].description;        \n        return tempConfig;\n      }));\n    });\n    return Observable.forkJoin(requests);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/weather.service.ts","export const environment = {\n  production: true,\n  baseApiUrl: 'http://weathertrack.herokuapp.com//api'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}